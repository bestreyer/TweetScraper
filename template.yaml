AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Tweets Scraper

Globals:
    Function:
        Runtime: python3.6
        Timeout: 60

Resources:
    ApiGateway:
        Type: AWS::Serverless::Api
        Properties:
          StageName: Prod
          DefinitionBody:
            swagger: 2.0
            info:
              version: "1.0"
              title:
                Ref: AWS::StackName
            paths:
              /hashtags/{hashtag}:
                get:
                  tags:
                    - "Tweet"
                  parameters:
                    - name: hashtag
                      description: A hashtag by which tweets will be gotten.
                      in: path
                      type: string
                      minLength: 1
                      maxLength: 64
                      pattern: '^\S{1,64}$'
                      required: true
                    - name: limit
                      description: Maximum number of tweets in response.
                      in: query
                      type: integer
                      minimum: 0
                      maximum: 1000
                      default: 30
                      required: false
                  responses:
                    '200':
                      description: 'Returns tweets by hashtag'
                      schema:
                        $ref: '#/definitions/Tweets'

                  x-amazon-apigateway-integration:
                    responses: {}
                    uri:
                      Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HashtagTweetsLambda.Arn}/invocations
                    httpMethod: "POST"
                    type: "aws_proxy"

              /users/{username}:
                get:
                  tags:
                  - "Twitter"
                  parameters:
                  - name: username
                    description: A username of twitter user by which tweets will be gotten.
                    in: path
                    type: string
                    pattern: '^\S{1,64}$'
                    minLength: 1
                    maxLength: 64
                    required: true
                  - name: limit
                    description: Maximum number of tweets in response.
                    in: query
                    type: integer
                    minimum: 0
                    maximum: 1000
                    default: 30
                    required: false
                  responses:
                    '200':
                      description: 'User tweets'
                      schema:
                        $ref: '#/definitions/Tweets'
                  x-amazon-apigateway-integration:
                    responses: {}
                    uri:
                      Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserTweetsLambda.Arn}/invocations
                    httpMethod: "POST"
                    type: "aws_proxy"

            definitions:
              Account:
                type: object
                properties:
                  fullname:
                    type: string
                  href:
                    type: string
                  id:
                    type: integer

              Tweet:
                type: object
                properties:
                  account:
                    $ref: '#/definitions/Account'
                  date:
                    type: string
                  hashtags:
                    type: array
                    items:
                      type: string
                  likes:
                    type: integer
                  replies:
                    type: integer
                  retweets:
                    type: integer
                  text:
                    type: string

              Tweets:
                type: array
                items:
                  $ref: '#/definitions/Tweet'
        DependsOn:
            - UserTweetsLambda
            - HashtagTweetsLambda

    ConfigHashtagTweetsLambdaPermission:
        Type: "AWS::Lambda::Permission"
        DependsOn:
            - ApiGateway
            - HashtagTweetsLambda
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref HashtagTweetsLambda
            Principal: apigateway.amazonaws.com

    UserTweetsLambdaPermission:
        Type: "AWS::Lambda::Permission"
        DependsOn:
            - ApiGateway
            - UserTweetsLambda
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref UserTweetsLambda
            Principal: apigateway.amazonaws.com


    HashtagTweetsLambda:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: build/hashtag_tweets/
            Handler: app.handler.handle

    UserTweetsLambda:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: build/users_tweets/
            Handler: app.handler.handle
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGateway
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod'
